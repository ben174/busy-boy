{"version":3,"sources":["CalendarGraph.js","Controls.js","App.js","serviceWorker.js","index.js"],"names":["CalendarGraph","props","columns","Array","dateIndex","colors","svgStyle","drawMode","cursor","w","days","d","dates","date","level","off","fillColor","day","key","class","width","height","x","y","fill","data-level","data-date","format","push","column","onMouseDown","onDraw","onMouseOver","transform","style","RandomControls","Typography","id","variant","component","gutterBottom","Grid","container","spacing","item","xs","Slider","value","dailyContribPercent","onChange","onDailySliderChange","aria-labelledby","weekendContribPercent","onWeekendSliderChange","DrawControls","levelColors","levelButtonStyle","levelButtons","map","e","i","Button","onClick","onLevelChange","backgroundColor","Container","ButtonGroup","color","aria-label","disabled","drawLevel","TabPanel","children","index","other","role","hidden","Box","p","AppContainer","paperStyle","margin","padding","classes","makeStyles","theme","root","useStyles","tabStyle","minHeight","className","align","Paper","elevation","paddingTop","selectedTab","Divider","AppBar","position","Tabs","onTabChange","Tab","label","icon","button","startIcon","Icon","App","setOffDays","state","downDays","length","downWeekends","setState","handleDailySliderChange","val","_","debounce","leading","trailing","drawDebouncedEvent","handleWeekendSliderChange","handleTabChange","event","newValue","randomDates","drawDates","handleDraw","buttons","target","getAttribute","dateObj","filter","handleLevelChange","parseInt","currDate","moment","startOf","subtract","Math","floor","random","randomDateObject","drawDateObject","sort","oldArray","keys","this","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.617819bd.chunk.js","sourcesContent":["import * as React from 'react';\n\nfunction CalendarGraph(props) {\n    var columns = Array();\n    var dateIndex = 0;\n    const colors = [\n        '#ebedf0',\n        '#c6e48b',\n        '#7bc96f',\n        '#239a3b',\n        '#196127',\n    ]\n    var svgStyle = {}\n    if (props.drawMode) {\n        svgStyle.cursor = 'pointer';\n    }\n    for (var w=0;w<52;w++) { \n        var days = Array();\n        for (var d=0; d<7; d++) {\n            var {date, level, off} = props.dates[dateIndex];\n            if (off) {\n                level = 0;\n            }\n            var fillColor = colors[level];\n            var day = <rect key={`day-${d}`} class=\"day\" width=\"10\" height=\"10\" x={14-w} y={d*13} fill={fillColor} data-level={level} data-date={date.format('MM/DD/YYYY')}></rect>\n            days.push(day);\n            dateIndex++;\n        }\n        var column = <g key={`week-${w}`} onMouseDown={props.onDraw} onMouseOver={props.onDraw} transform={`translate(${w*14}, 0)`}>{days}</g>\n        columns.push(column)\n    }\n    return (\n        <svg width=\"700\" height=\"112\" style={svgStyle}>\n            <g transform=\"translate(0, 20)\">\n                {columns}\n            </g>\n        </svg>\n    );\n}\n\nexport default CalendarGraph;","import Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport BlurCircularTwoToneIcon from '@material-ui/icons/BlurCircularTwoTone';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport ReorderTwoTone from '@material-ui/icons/ReorderTwoTone';\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport * as React from 'react';\nimport './App.css';\nimport CalendarGraph from './CalendarGraph';\n\n\nexport function RandomControls(props) {\n    return (\n      <div>\n        <Typography id=\"discrete-slider\" variant=\"h6\" component=\"h6\" gutterBottom>\n          Daily Contribution Frequency\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item>\n            Lower\n        </Grid>\n          <Grid item xs>\n            <Slider value={props.dailyContribPercent} onChange={props.onDailySliderChange} aria-labelledby=\"continuous-slider\" />\n          </Grid>\n          <Grid item>\n            Higher\n          </Grid>\n        </Grid>\n        <Typography id=\"discrete-slider\" variant=\"h6\" component=\"h6\" gutterBottom>\n          Weekend Contribution Frequency\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item>\n            Lower\n        </Grid>\n          <Grid item xs>\n            <Slider value={props.weekendContribPercent} onChange={props.onWeekendSliderChange} aria-labelledby=\"continuous-slider\" />\n          </Grid>\n          <Grid item>\n            Higher\n        </Grid>\n        </Grid>\n      </div>\n    )\n  }\n  \n  export function DrawControls(props) {\n    const levelColors = [\n      '#ebedf0',\n      '#c6e48b',\n      '#7bc96f',\n      '#239a3b',\n      '#196127',\n    ]\n  \n    const levelButtonStyle = {\n      height: '60px',\n    }\n  \n    const levelButtons = levelColors.map((e, i) => (\n      <Button key={`drawColor-${i}`} data-level={i} onClick={props.onLevelChange} variant=\"contained\" style={{ backgroundColor: e, ...levelButtonStyle }} />\n    ))\n  \n    return (\n      <Container>\n        <Typography variant=\"h6\" component=\"h6\" gutterBottom>\n          Color Palette\n        </Typography>\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          {levelButtons}\n        </ButtonGroup>\n        <Typography variant=\"h6\" component=\"h6\" gutterBottom>\n          Selected Color\n        </Typography>\n        <Button disabled variant=\"contained\" style={{ backgroundColor: levelColors[props.drawLevel], ...levelButtonStyle }} />\n      </Container>\n    )\n  }","import Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport BlurCircularTwoToneIcon from '@material-ui/icons/BlurCircularTwoTone';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport ReorderTwoTone from '@material-ui/icons/ReorderTwoTone';\nimport {DrawControls, RandomControls} from './Controls'\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport * as React from 'react';\nimport './App.css';\nimport CalendarGraph from './CalendarGraph';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var randomDates = Array();\n    var drawDates = Array();\n    var downDays = Array();\n    var downWeekends = Array();\n    for (var d = 0; d < 365; d++) {\n      const currDate = moment().startOf('isoWeek').subtract(3, 'days').subtract(d, 'days');\n      var level = Math.floor((Math.random() * 4) + 1);\n\n      const randomDateObject = {\n        date: currDate,\n        level: level,\n        off: true,\n      }\n      if (currDate.day() >= 5) {\n        downWeekends.push(d);\n      } else {\n        downDays.push(d);\n      }\n      randomDates.push(randomDateObject);\n      const drawDateObject = {\n        date: currDate,\n        level: level,\n        off: true,\n      }\n      drawDates.push(drawDateObject);\n    }\n    this.state = {\n      randomDates: randomDates,\n      drawDates: drawDates,\n      dates: randomDates,\n      dailyContribPercent: 75,\n      weekendContribPercent: 10,\n      downDays: downDays.sort(() => Math.random() - 0.5),\n      downWeekends: downWeekends.sort(() => Math.random() - 0.5),\n      oldArray: [...Array(365).keys()].sort(() => Math.random() - 0.5),\n      selectedTab: 0,\n      drawLevel: 4,\n    };\n    this.setOffDays();\n  }\n\n  setOffDays = () => {\n    const dates = [...this.state.dates];\n    for (var i = 0; i < this.state.downDays.length; i++) {\n      dates[this.state.downDays[i]].off = !(i < this.state.dailyContribPercent * this.state.downDays.length / 100)\n    }\n    for (var i = 0; i < this.state.downWeekends.length; i++) {\n      dates[this.state.downWeekends[i]].off = !(i < this.state.weekendContribPercent * this.state.downWeekends.length / 100)\n    }\n    this.setState({ dates });\n  }\n\n  handleDailySliderChange = (e, val) => {\n    const drawDebouncedEvent = _.debounce(this.setOffDays, 100, { leading: true, trailing: false });\n    drawDebouncedEvent();\n    this.setState({ dailyContribPercent: val })\n  }\n\n  handleWeekendSliderChange = (e, val) => {\n    const drawDebouncedEvent = _.debounce(this.setOffDays, 100, { leading: true, trailing: false });\n    drawDebouncedEvent();\n    this.setState({ weekendContribPercent: val })\n  }\n\n  handleTabChange = (event, newValue) => {\n    this.setState({ selectedTab: newValue });\n    if (newValue === 0) {\n      this.setState({ dates: this.state.randomDates })\n    } else if (newValue === 1) {\n      this.setState({ dates: this.state.drawDates })\n    }\n  }\n\n  handleDraw = (event) => {\n    if (event.buttons === 1) { \n      const date = event.target.getAttribute('data-date')\n      const dates = [...this.state.dates];\n      const dateObj = dates.filter(d => d.date.format('MM/DD/YYYY') == date);\n      dateObj[0].level = this.state.drawLevel;\n      dateObj[0].off = false;\n      this.setState({dates});\n    }\n  }\n\n  handleLevelChange = (event) => {\n    const drawLevel = parseInt(event.target.getAttribute('data-level'), 10);\n    this.setState({drawLevel})\n  }\n\n  render() {\n    return <AppContainer\n      weekendContribPercent={this.state.weekendContribPercent}\n      dailyContribPercent={this.state.dailyContribPercent}\n      dates={this.state.dates}\n      selectedTab={this.state.selectedTab}\n      onWeekendSliderChange={this.handleWeekendSliderChange}\n      onDailySliderChange={this.handleDailySliderChange}\n      onTabChange={this.handleTabChange}\n      onDraw={this.handleDraw}\n      onLevelChange={this.handleLevelChange}\n      drawLevel={this.state.drawLevel} />\n  }\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\n\n\nfunction AppContainer(props) {\n  const paperStyle = {\n    margin: \"1% 10%\",\n    padding: \"0% 10%\",\n\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      backgroundColor: '#f5f5f5',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const tabStyle = {\n    minHeight: '220px',\n  }\n\n  var value = 0;\n\n\n  return (\n    <Container className={classes.root}>\n      <div align=\"center\">\n        <Typography variant=\"h3\" component=\"h3\">\n          Busy Boy\n        </Typography>\n        <Typography variant=\"h6\" component=\"h6\" gutterBottom>\n          GitHub Contribution Graph Modifier\n        </Typography>\n      </div>\n      <Paper elevation={3} style={paperStyle}>\n        <div style={{ padding: '10px' }}>\n          <p>\n            The GitHub contribution graph is a handy quick glance at the activity of a user on GitHub. But you can easily game it by altering your\n            commit dates. When I learned about this, I created GitDraw to have some fun and allow people to draw pictures in their contribution\n            graph.\n          </p>\n          <p>\n            But as someone who has been a decision maker in the hiring process for quite some time now, I still sometimes find myself biasing at\n            least part of my decision on my first glance at their GitHub contribution graph. If *I* am doing that, I'm quite sure others are too.\n            I consider this a vulnerability in the hiring process. And with vulnerabilities, often times bringing attention to them is what it takes\n            to teach people to not rely on them.\n          </p>\n          <p>\n            So here is a tool which will allow anyone to fudge contribution activity.\n          </p>\n        </div>\n      </Paper>\n      <Paper elevation={3} style={paperStyle}>\n        <Typography variant=\"h5\" component=\"h5\" style={{paddingTop: \"20px\"}}>\n          Your Contribution Graph Output\n        </Typography>\n        <CalendarGraph dates={props.dates} drawMode={props.selectedTab === 1} onDraw={props.onDraw} />\n        <Divider style={{ margin: '20px 0' }} />\n\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Tabs onChange={props.onTabChange} value={props.selectedTab} aria-label=\"simple tabs example\">\n              <Tab label=\"Randomness\" icon={<BlurCircularTwoToneIcon />} />\n              <Tab label=\"Free Draw\" icon={<EditTwoToneIcon />} />\n              <Tab label=\"Script Source\" icon={<ReorderTwoTone />} />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={props.selectedTab} index={0} style={tabStyle}>\n            <RandomControls {...props} />\n          </TabPanel>\n          <TabPanel value={props.selectedTab} index={1} style={tabStyle}>\n            <DrawControls {...props} />\n          </TabPanel>\n          <TabPanel value={props.selectedTab} index={2} style={tabStyle}>\n          </TabPanel>\n        </div>\n        <div align=\"right\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            startIcon={<Icon>get_app</Icon>}\n            style={{ margin: '20px 0' }}\n          >\n            Download Script\n          </Button>\n        </div>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}